// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Service.Trading.Postgres;

#nullable disable

namespace Service.Trading.Postgres.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220901062717_TradeRequestAndExternalTrade")]
    partial class TradeRequestAndExternalTrade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cb_trading")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Service.Trading.Domain.Models.ExternalTrade", b =>
                {
                    b.Property<string>("TradeId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("ExchangeTradeId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("IsBuySide")
                        .HasColumnType("boolean");

                    b.Property<string>("Market")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("RequestId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Source")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.HasKey("TradeId");

                    b.HasIndex("RequestId");

                    b.HasIndex("Status");

                    b.HasIndex("Timestamp");

                    b.ToTable("external_trade", "cb_trading");
                });

            modelBuilder.Entity("Service.Trading.Domain.Models.TradeRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal>("BuyAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("BuyAssetSymbol")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int>("ErrorCode")
                        .HasColumnType("integer");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<decimal>("ExpectedBuyAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ExpectedSellAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("FeeAsset")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<decimal>("SellAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("SellAssetSymbol")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RequestId");

                    b.HasIndex("ClientId");

                    b.HasIndex("Timestamp");

                    b.ToTable("trade_request", "cb_trading");
                });
#pragma warning restore 612, 618
        }
    }
}
